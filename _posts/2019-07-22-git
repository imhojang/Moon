---
layout: post
title:  "What is Git?"
date:   2019-07-22
excerpt: " "
tag:
- git
comments: true
feature: https://images.unsplash.com/photo-1552550049-db097c9480d1?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1234&q=80
category: [ Git ]
---
# Git

> A **version control system** for tracking changes in computer files and coordinating work on those files among multiple people.

- 파일 변경 사항을 추적해주는 프로그램

- 협력 개발을 도와줌
- 누가 언제 무엇을 수정했는지 알수 있게 해줌
- 다시 과거 시점의 상태로 돌아갈 수 있게 해주는 프로그램

### 창시자

Linus Torvalds  
라이너스 토발드스

## other version control system

- svn
- mercurial

## Git snapshots

- 저장하는 순간에 사진을 찍어서 어딘가에 보관함
- git 이 코드 히스토리를 기억하는 방식이다.
- 주어진 시점에 파일들이 어떻게 생겼는지를 기록한다.
- 시점은 우리가 선택하여 기록해달라고 명령한다.
- 기록된 과거시점 혹은 가장 최신 시점으로 이동하여 볼 수 있다.

## Git commit

- snapshot을 생성하는 행위
- 동사 또는 명사로 쓰인다.
  - 나는 커밋했어요
  - 새 커밋 방금 만들었어요
- 기본적으로 git project는 수많은 ..
- 각 commit 은 크게 세가지 정보를 보관한다.

1. 각 파일 변경 사항
2. 바로 이전 commit, 즉 parent commit
3. commit hash (고유한 해쉬값. 아이디 같은것임)

## Git repository

- 줄임말로 repo라고 주로 부른다
- 모든 파일들과 그 파일들의 히스토리가 모여있는 곳
- ...?
- 개인 컴퓨터나 클라우드 서버(Github)에 있다.
- 클라우드에서 보ㄱ사해서 다운 받는 행위를 clone이라고함
- clone을 함으로서 협업이 가능해짐

## Git pull

- 내 컴퓨터에 없는 내용을 클라우드로부터 추가적으로 다운로드 받는 행위를 pull이라고 한다. (유사: fetch)
- fetch: 클라우드에 있는 코드 변경사항을 내 리포에 다운 받는 것임. 현재 브랜치에 반영되는 것과는 다름. (다운O 통합X)
- pull: 다운 O 통합 O

## Git branch

- 모든 commit들은 branch내에 존재한다.
- branch는 아주 많이 많이 있을 수 있다.

> 하나의 프로젝트 당 하나의 repo. 하나의 repo내에는 여러개의 branch. branch 내에는 여러개의 commit.

## HEAD ? 

- 현재 branch의 가장 마지막 commit 일 수도 있고, 해석하기에 따라 다르다.
- 여러가지 경우가 많지만 잘 모르겠으면 패스

## Master

- 모든 프로젝트의 가장 중심이 되는 brnach 이름. 항상 그런것은 아님

## commit 만들기

변경사항을 스테이지에 올림.  
스테이지에 올리면 다음 commit에 포함하고 싶은 사항들을 예약하는 것  
스테이지에 올라가 있는 사항들만이 commit에 추가된다. 

## git status

add 하고나서, commit 하고 나서 매번 확인

## git log

> 현재 브랜치의 히스토리 보기

위 코멘드를 실행할 경우 commit history의 최신순부터 보여준다. 그만보고 싶다면 q를 누르면 된다.

## github

git들의 hub  
git repository 호스팅 서비스 업체

remote repositories  
다른 사람들과의 공유나 협업 또는 백업을 가능케 해준다.  
그 이외에 여러가지 기능들이 있다.  

## github연결하기

내 컴퓨터에 있는 사항들을 github 에 저장시켜놓고 싶을 때

- 다른 사람들과의협업을 위해
- ..
- ..

`git remote add origin repo-url`
여기서의 origin은 로컬에 저장될 repo의 이름이다. 

fork 할 경우 `upstream`이라는 이름으로 등록이 됨.

onlywei.github.io/explain-git-with-d3